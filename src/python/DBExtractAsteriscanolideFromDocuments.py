from PyReaxys import *

rIds = [2001850,
2415834,
2476631,
3471912,
3472449,
3472779,
3473184,
3475360,
3476032,
3477023,
3497633,
3736675,
15431683,
19243134,
19243135,
19243136,
19243137,
19243138,
19243139,
19243141,
19243142,
19243143,
19243144,
19243145,
19243146,
19243147,
19243359,
19243360,
19243361,
19243362,
19243363,
19243364,
19243365,
19243366,
19243935,
19243936,
19243937,
19243938,
19245280,
19245281,
19258937,
19258938,
19258939,
19258940,
19258941,
19258942,
19258943,
19258944,
1684484,
3476032,
3477023,
4038399,
8753230,
8759873,
8781035,
10243926,
10249292,
10281566,
10285179,
10288453,
15421211,
15421212,
15421239,
15421240,
15421241,
15424690,
15424691,
15428902,
15428903,
15431683,
15438591,
15438592,
15438593,
15438594,
15440467,
15440468,
27166981,
27166982,
27167042,
27167469,
27210366,
2860993,
8612988,
8617049,
8617050,
8623044,
8623626,
8623932,
8630946,
8645338,
8645420,
8646064,
8646216,
8646568,
8646659,
8646660,
8646661,
8646825,
8650420,
8650421,
8653108,
8661416,
15760867,
15760868,
15760869,
15764075,
15764076,
15764077,
15764078,
15764079,
15764080,
15764081,
15764082,
15764083,
15764084,
15764085,
15764086,
15764087,
15764088,
15764089,
15764090,
15764091,
15764092,
15764093,
15764094,
15769357,
15769358,
15769359,
15769360,
15769361,
15769362,
15769363,
15769364,
15769365,
15769366,
15769367,
15769368,
15769369,
15769370,
15769371,
15769372,
15769373,
15769374,
15769375,
15781055,
15781056,
15781057,
15781058,
15781059,
15781060,
15781061,
15781062,
15781063,
15781064,
15781065,
15781066,
15781067,
15781068,
15781069,
15781070,
15781698,
15781699,
15781700,
15781701,
15781702,
15781703,
15781704,
15781705,
15781706,
15781707,
15781708,
15781709,
15781710,
15781711,
15781828,
15781829,
15781830,
15781831,
15781832,
15781833,
15781834,
15781835,
15781836,
15781837,
15781838,
15781839,
15782422,
15782423,
15782424,
15782425,
15782426,
15782427,
15782428,
15782429,
15782430,
15782546,
15782547,
15782548,
15782549,
15783331,
15783332,
15783333,
15783334,
15783335,
15783336,
15783337,
15783338,
15783339,
15783340,
15783341,
15783342,
15783343,
15783344,
15783345,
15783346,
15783347,
15783348,
15783454,
15783455,
15783456,
15783457,
15783458,
15783459,
15783460,
15783754,
15783755,
15783756,
15783757,
15783758,
15783804,
15783805,
15783806,
15784053,
15784054,
15784055,
15786217,
15786218,
15786219,
15786220,
15786221,
15786222,
15786223,
15786224,
15786225,
15786226,
15787763,
15787764,
15787765,
15787766,
15787767,
15787768,
15787769,
15787770,
15787771,
15787772,
15787773,
15787774,
15787775,
15787776,
2288500,
2334652,
2877610,
8558588,
8561614,
8561657,
8572998,
8579975,
8584797,
8584894,
8587170,
8587171,
8588701,
8589382,
8589447,
8589574,
8590114,
8590149,
8591688,
8595097,
8595821,
8605770,
8607145,
14444452,
14444453,
14444454,
14444551,
14444552,
14444601,
15091995,
15091996,
15091997,
15091998,
15091999,
15093807,
15097504,
15097516,
15103514,
15103515,
15103516,
15103517,
15103525,
15103526,
15103527,
15103528,
15103529,
15103530,
15103531,
15103532,
15103533,
15103553,
15103554,
15103555,
15103556,
15103557,
15103558,
15103559,
15103560,
15103561,
15103562,
15103563,
15103564,
15103565,
15103566,
15103567,
15103568,
15103629,
15103630,
15103631,
15103632,
15103633,
15103634,
15103635,
15103636,
15103637,
15103638,
15103639,
15103640,
15103641,
15103642,
15103643,
15103644,
15103645,
15103646,
15103673,
15103674,
15103675,
15103676,
15103677,
15103678,
15103679,
15103680,
15103681,
15103682,
15103683,
15103684,
15103685,
15103686,
15103687,
15103688,
15103689,
15103716,
15103717,
15103718,
15103719,
15103723,
15103724,
15103725,
15103726,
15103727,
15103728,
15103729,
15103730,
15103731,
15103732,
15103733,
15103734,
15103735,
15103736,
15103765,
15103766,
15103767,
15103768,
15103769,
15103770,
15103771,
15103772,
15103773,
15103774,
15103775,
15103776,
15103799,
15103800,
15103801,
15103802,
15103803,
15103804,
15103805,
15103806,
15103807,
15103808,
15103809,
15103810,
15103811,
15103839,
15103841,
15103842,
15103843,
15103844,
15103845,
15103846,
15103847,
15103848,
15103849,
15103850,
15103851,
15103945,
15103946,
15103947,
15103948,
15103949,
15103950,
15103951,
15103952,
15103953,
15103954,
15103986,
15103987,
15103988,
15103989,
15103990,
15103991,
15103992,
15103993,
15103994,
15103995,
15103996,
15103997,
15103998,
15103999,
15104000,
15104001,
15104002,
15104003,
15104004,
15104037,
15104038,
15104039,
15104040,
15104053,
15104055,
15104073,
15104074,
15104075,
15104076,
15822377,
15822378,
15822379,
15822380,
15824254,
15824255,

]


db = Database("/scr/k61san/jlandersen")

cs = set()
rs = []
for i in rIds:
	r = db.reactionFromId(i)
	if not r:
		raise Exception("Reaction %d does not exist." % i)
	rs.append(r)
for r in rs:
	for c in r.educts:
		cs.add(c[1])
	for c in r.products:
		cs.add(c[1])
print("digraph G {")
for c in cs:
	print(c.id, end=' ')
	print("N", end=' ')
	print("notS", end=' ')
	print("Weight", end=' ')
	print("2") #Hardcoded Weight until real weight is added to DB
for r in rs:
	print(r.id, end=' ')
	print("R", end=' ')
	print("Yield", end=' ')
	print("0.8") #Hardcoded Yield until real yield is added to DB
print("REACTIONS")
for r in rs:
	for c in r.educts:
		print(str(r.id)+"->"+str(c[1].id) )	
	for c in r.products:
		print(str(c[1].id)+"->"+str(r.id) )
print("}")
